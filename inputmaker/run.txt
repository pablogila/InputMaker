'''
This submodule will be rewritten or deleted. I must check it.
'''

cp2k_args = ['cp2k', 'CP2K', '-cp2k', '-CP2K', '--cp2k', '--CP2K']
castep_args = ['castep', 'CASTEP', '-castep', '-CASTEP', '--castep', '--CASTEP']
help_args = ['h', 'H', '-h', '-H', 'help', 'HELP', '-help', '-HELP', '--help', '--HELP']
supercell_args = ['supercell=', 'SUPERCELL=', '-supercell=', '-SUPERCELL=', '--supercell=', '--SUPERCELL=']
out_folder_args = ['out', 'OUT', '-out', '-OUT', '--out', '--OUT']
subfolder_args = ['sub', 'SUB', '-sub', '-SUB', '--sub', '--SUB']

if __name__ == "__main__":

    # Help message
    if any(arg in sys.argv for arg in help_args):
        print("  INPUTMAKER BASIC COMMANDS")
        print("  Usage: python inputmaker.py [options]")
        print("  Options:")
        print("    -castep      Create CASTEP inputs.")
        print("    -sub         Move CASTEP inputs to individual subfolders.")
        print("    -out         Move all CASTEP inputs inside an /out/ folder.")
        print("    -supercell=[k,l,m]  Create CASTEP inputs with a supercell.")
        print("    -cp2k        Create CP2K inputs from a template.")
        print("  Examples:")
        print("    python3 inputmaker.py -cp2k")
        print("    python3 inputmaker.py -castep -sub -supercell=[2,2,2]")
        print("    python3 inputmaker.py -castep -out --supercell=[3,2,3]")
        print("  More info at https://github.com/pablogila/InputMaker")

    # CP2K inputs
    if any(arg in cp2k_args for arg in sys.argv):
        cp2k()

    # CASTEP inputs
    if any(arg in castep_args for arg in sys.argv):
        # CASTEP inputs inside an /out/ folder
        if any(arg in out_folder_args for arg in sys.argv):
            out_folder = 'out'
        else:
            out_folder = None
        # CASTEP inputs on subfolders
        if any(arg in subfolder_args for arg in sys.argv):
            move_to_subfolders = True
        else:
            move_to_subfolders = False
        # Supercell for CASTEP calculations
        supercell = None
        found = False
        for arg in sys.argv:
            if found:
                break
            for i in supercell_args:
                if arg.startswith(i):
                    supercell = arg.split('=')[1]
                    found = True
                    break

        castep(supercell, out_folder, move_to_subfolders)